name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # Docker 로그인
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/docker-test-app
          docker build -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      # SSH를 통해 EC2에 연결하여 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Docker Hub에 로그인
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # 기존 컨테이너 중지 및 삭제
            docker stop my-app || true
            docker rm my-app || true

            # 최신 Docker 이미지 가져오기
            IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/docker-test-app
            docker pull $IMAGE_NAME:latest

            # 새로운 컨테이너 실행
            docker run -d --name my-app -p 80:3000 $IMAGE_NAME:latest